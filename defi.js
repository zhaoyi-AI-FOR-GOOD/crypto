class DeFiDashboard {\n    constructor() {\n        this.defiProtocols = [];\n        this.setupEventListeners();\n    }\n\n    setupEventListeners() {\n        // 可以添加筛选器、排序等事件监听\n    }\n\n    async loadDefiData() {\n        try {\n            // 加载DeFi全局数据\n            await this.loadGlobalDefiData();\n            \n            // 加载DeFi协议数据\n            await this.loadDefiProtocols();\n            \n        } catch (error) {\n            console.error('加载DeFi数据失败:', error);\n            this.showDefiError();\n        }\n    }\n\n    async loadGlobalDefiData() {\n        try {\n            const response = await fetch('https://api.coingecko.com/api/v3/global/decentralized_finance_defi');\n            \n            if (!response.ok) {\n                throw new Error('Failed to fetch DeFi global data');\n            }\n\n            const data = await response.json();\n            this.renderGlobalDefiStats(data.data);\n            \n        } catch (error) {\n            console.error('加载DeFi全局数据失败:', error);\n            // 使用模拟数据\n            this.renderGlobalDefiStats({\n                defi_market_cap: '$180.5B',\n                defi_to_eth_ratio: '25.8%',\n                trading_volume_24h: '$4.2B'\n            });\n        }\n    }\n\n    async loadDefiProtocols() {\n        try {\n            // 使用categories API获取DeFi相关代币\n            const response = await fetch(\n                'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&category=decentralized-finance-defi&order=market_cap_desc&per_page=20&page=1&sparkline=false&price_change_percentage=24h'\n            );\n            \n            if (!response.ok) {\n                throw new Error('Failed to fetch DeFi protocols');\n            }\n\n            const protocols = await response.json();\n            this.renderDefiProtocols(protocols);\n            \n        } catch (error) {\n            console.error('加载DeFi协议数据失败:', error);\n            this.renderMockDefiProtocols();\n        }\n    }\n\n    renderGlobalDefiStats(data) {\n        const tvlElement = document.getElementById('defi-tvl');\n        const dominanceElement = document.getElementById('defi-dominance');\n\n        if (typeof data.defi_market_cap === 'object') {\n            tvlElement.textContent = this.formatMarketCap(data.defi_market_cap.usd);\n        } else {\n            tvlElement.textContent = data.defi_market_cap || '$180.5B';\n        }\n\n        if (data.defi_to_eth_ratio) {\n            dominanceElement.textContent = data.defi_to_eth_ratio.toFixed(1) + '%';\n        } else {\n            dominanceElement.textContent = data.defi_to_eth_ratio || '25.8%';\n        }\n    }\n\n    renderDefiProtocols(protocols) {\n        const container = document.getElementById('defi-protocols');\n        container.innerHTML = '';\n\n        // 创建表头\n        const header = document.createElement('div');\n        header.className = 'defi-header';\n        header.innerHTML = `\n            <h4>🏛️ DeFi协议排行</h4>\n            <p>按市值排序的主要DeFi代币</p>\n        `;\n        container.appendChild(header);\n\n        // 创建协议列表\n        const protocolList = document.createElement('div');\n        protocolList.className = 'protocol-list';\n\n        protocols.slice(0, 10).forEach((protocol, index) => {\n            const protocolCard = this.createProtocolCard(protocol, index + 1);\n            protocolList.appendChild(protocolCard);\n        });\n\n        container.appendChild(protocolList);\n    }\n\n    createProtocolCard(protocol, rank) {\n        const card = document.createElement('div');\n        card.className = 'protocol-card';\n        \n        const priceChange = protocol.price_change_percentage_24h || 0;\n        const changeClass = priceChange >= 0 ? 'change-positive' : 'change-negative';\n        const changeIcon = priceChange >= 0 ? '📈' : '📉';\n        \n        card.innerHTML = `\n            <div class=\"protocol-rank\">#{rank}</div>\n            <div class=\"protocol-info\">\n                <img src=\"${protocol.image}\" alt=\"${protocol.name}\" class=\"protocol-icon\">\n                <div class=\"protocol-details\">\n                    <div class=\"protocol-name\">${protocol.name}</div>\n                    <div class=\"protocol-symbol\">${protocol.symbol.toUpperCase()}</div>\n                </div>\n            </div>\n            <div class=\"protocol-price\">\n                <div class=\"current-price\">$${this.formatPrice(protocol.current_price)}</div>\n                <div class=\"price-change ${changeClass}\">\n                    ${changeIcon} ${priceChange.toFixed(2)}%\n                </div>\n            </div>\n            <div class=\"protocol-stats\">\n                <div class=\"market-cap\">\n                    <span class=\"label\">市值</span>\n                    <span class=\"value\">$${this.formatMarketCap(protocol.market_cap)}</span>\n                </div>\n                <div class=\"volume\">\n                    <span class=\"label\">24h成交量</span>\n                    <span class=\"value\">$${this.formatMarketCap(protocol.total_volume)}</span>\n                </div>\n            </div>\n        `;\n        \n        return card;\n    }\n\n    renderMockDefiProtocols() {\n        const container = document.getElementById('defi-protocols');\n        const mockProtocols = [\n            { name: 'Uniswap', symbol: 'UNI', price: '$8.45', change: '+2.3%', marketCap: '$5.1B' },\n            { name: 'Chainlink', symbol: 'LINK', price: '$14.62', change: '+1.8%', marketCap: '$8.2B' },\n            { name: 'Aave', symbol: 'AAVE', price: '$95.30', change: '-0.5%', marketCap: '$1.4B' },\n            { name: 'Compound', symbol: 'COMP', price: '$52.18', change: '+3.2%', marketCap: '$320M' }\n        ];\n\n        container.innerHTML = `\n            <div class=\"defi-header\">\n                <h4>🏛️ DeFi协议排行</h4>\n                <p>模拟数据展示</p>\n            </div>\n            <div class=\"protocol-list\">\n                ${mockProtocols.map((protocol, index) => `\n                    <div class=\"protocol-card mock\">\n                        <div class=\"protocol-rank\">#{index + 1}</div>\n                        <div class=\"protocol-info\">\n                            <div class=\"protocol-icon-placeholder\">🔷</div>\n                            <div class=\"protocol-details\">\n                                <div class=\"protocol-name\">${protocol.name}</div>\n                                <div class=\"protocol-symbol\">${protocol.symbol}</div>\n                            </div>\n                        </div>\n                        <div class=\"protocol-price\">\n                            <div class=\"current-price\">${protocol.price}</div>\n                            <div class=\"price-change ${protocol.change.includes('+') ? 'change-positive' : 'change-negative'}\">\n                                ${protocol.change.includes('+') ? '📈' : '📉'} ${protocol.change}\n                            </div>\n                        </div>\n                        <div class=\"protocol-stats\">\n                            <div class=\"market-cap\">\n                                <span class=\"label\">市值</span>\n                                <span class=\"value\">${protocol.marketCap}</span>\n                            </div>\n                        </div>\n                    </div>\n                `).join('')}\n            </div>\n        `;\n    }\n\n    showDefiError() {\n        const container = document.getElementById('defi-protocols');\n        container.innerHTML = '<p style=\"text-align: center; color: #f44336; padding: 40px;\">🏛️ 加载DeFi数据失败</p>';\n        \n        document.getElementById('defi-tvl').textContent = '错误';\n        document.getElementById('defi-dominance').textContent = '错误';\n    }\n\n    formatPrice(price) {\n        if (price < 1) {\n            return price.toFixed(6);\n        } else if (price < 100) {\n            return price.toFixed(4);\n        } else {\n            return price.toLocaleString('en-US', {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n            });\n        }\n    }\n\n    formatMarketCap(marketCap) {\n        if (marketCap >= 1e12) {\n            return (marketCap / 1e12).toFixed(2) + 'T';\n        } else if (marketCap >= 1e9) {\n            return (marketCap / 1e9).toFixed(2) + 'B';\n        } else if (marketCap >= 1e6) {\n            return (marketCap / 1e6).toFixed(2) + 'M';\n        } else {\n            return marketCap.toLocaleString();\n        }\n    }\n}\n\n// 在页面加载时初始化\ndocument.addEventListener('DOMContentLoaded', () => {\n    window.defiDashboard = new DeFiDashboard();\n});